name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  create-release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Extract version
      id: extract_version
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="${{ github.event.inputs.version }}"
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.extract_version.outputs.version }}
        name: Release v${{ steps.extract_version.outputs.version }}
        body: |
          ## What's Changed
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/...v${{ steps.extract_version.outputs.version }}
        draft: true
        prerelease: true
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # NOTE: PyPI publishing is commented out until ready
  # publish-pypi:
  #   name: Publish to PyPI
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: pypi
  #   steps:
  #   - name: Download artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: dist
  #       path: dist/
  #   
  #   - name: Publish to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
  #     with:
  #       password: ${{ secrets.PYPI_API_TOKEN }}